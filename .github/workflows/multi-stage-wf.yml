name: "multi stage CI workflow"


on:
  push:
    branches: [ test ]


jobs:

  ubuntu-alpine-latest-job:
    name: "multi stage ubuntu latest"
    runs-on: ubuntu-latest
    env: 
      version: "latest"
      name: "alpine/multistage "
      dockerdir: "dockerfiles"
      dockerfile: "Dockerfile.alpine.ubuntu"
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch   
    - name: "docker build alpine"
      run: |
        # destroyed afterwards (use --rm )
        # all subsequent Dockerfile commands generate new images and the cache is not used
        docker build --no-cache --rm  -t ${name}:${version} . --file ${dockerdir}/${dockerfile} 
        docker image ls
        docker image history ${name}:${version}
        docker system df -v               
        docker image inspect ${name}:${version}     